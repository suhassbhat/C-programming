Grading at Tue Nov 24 08:22:50 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==143== Memcheck, a memory error detector
==143== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==143== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==143== Command: ./tester mde
==143== Parent PID: 142
==143== 
==143== Invalid read of size 8
==143==    at 0x402918: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==143==    by 0x4037F4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==143==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==143==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==143== 
==143== 
==143== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==143==  Access not within mapped region at address 0x8
==143==    at 0x402918: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==143==    by 0x4037F4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==143==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==143==  If you believe this happened as a result of a stack
==143==  overflow in your program's main thread (unlikely but
==143==  possible), you can try to increase the size of the
==143==  main thread stack using the --main-stacksize= flag.
==143==  The main thread stack size used in this run was 8388608.
==143== 
==143== HEAP SUMMARY:
==143==     in use at exit: 36,608 bytes in 3,031 blocks
==143==   total heap usage: 3,136 allocs, 105 frees, 41,088 bytes allocated
==143== 
==143== LEAK SUMMARY:
==143==    definitely lost: 11,392 bytes in 712 blocks
==143==    indirectly lost: 11,392 bytes in 1,424 blocks
==143==      possibly lost: 0 bytes in 0 blocks
==143==    still reachable: 13,824 bytes in 895 blocks
==143==         suppressed: 0 bytes in 0 blocks
==143== Rerun with --leak-check=full to see details of leaked memory
==143== 
==143== For counts of detected and suppressed errors, rerun with: -v
==143== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==147== Memcheck, a memory error detector
==147== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==147== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==147== Command: ./tester brd
==147== Parent PID: 146
==147== 
==147== Invalid read of size 8
==147==    at 0x401D6C: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x402130: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x402207: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x40334C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==147==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==147== 
==147== 
==147== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==147==  Access not within mapped region at address 0x8
==147==    at 0x401D6C: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x402130: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x402207: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x40334C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==147==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==147==  If you believe this happened as a result of a stack
==147==  overflow in your program's main thread (unlikely but
==147==  possible), you can try to increase the size of the
==147==  main thread stack using the --main-stacksize= flag.
==147==  The main thread stack size used in this run was 8388608.
==147== 
==147== HEAP SUMMARY:
==147==     in use at exit: 112 bytes in 11 blocks
==147==   total heap usage: 12 allocs, 1 frees, 4,208 bytes allocated
==147== 
==147== LEAK SUMMARY:
==147==    definitely lost: 16 bytes in 1 blocks
==147==    indirectly lost: 16 bytes in 2 blocks
==147==      possibly lost: 0 bytes in 0 blocks
==147==    still reachable: 80 bytes in 8 blocks
==147==         suppressed: 0 bytes in 0 blocks
==147== Rerun with --leak-check=full to see details of leaked memory
==147== 
==147== For counts of detected and suppressed errors, rerun with: -v
==147== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: C
